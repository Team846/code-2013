// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "robotdata.pb.h"

#include <algorithm>

#include "../Network/protobuf/stubs/once.h"
#include "../Network/protobuf/io/coded_stream.h"
#include "../Network/protobuf/wire_format_lite_inl.h"
#include "../Network/protobuf/descriptor.h"
#include "../Network/protobuf/reflection_ops.h"
#include "../Network/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

namespace data {

namespace {

const ::google::protobuf::Descriptor* DataMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataMessage_IndexToTypeMapMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataMessage_IndexToTypeMapMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* DataMessage_IndexToValueMapMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DataMessage_IndexToValueMapMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompleteMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompleteMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_robotdata_2eproto() {
  protobuf_AddDesc_robotdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "robotdata.proto");
  GOOGLE_CHECK(file != NULL);
  DataMessage_descriptor_ = file->message_type(0);
  static const int DataMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage, classname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage, indextotypemap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage, indextovaluemap_),
  };
  DataMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataMessage_descriptor_,
      DataMessage::default_instance_,
      DataMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataMessage));
  DataMessage_IndexToTypeMapMessage_descriptor_ = DataMessage_descriptor_->nested_type(0);
  static const int DataMessage_IndexToTypeMapMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToTypeMapMessage, type_),
  };
  DataMessage_IndexToTypeMapMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataMessage_IndexToTypeMapMessage_descriptor_,
      DataMessage_IndexToTypeMapMessage::default_instance_,
      DataMessage_IndexToTypeMapMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToTypeMapMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToTypeMapMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataMessage_IndexToTypeMapMessage));
  DataMessage_IndexToValueMapMessage_descriptor_ = DataMessage_descriptor_->nested_type(1);
  static const int DataMessage_IndexToValueMapMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToValueMapMessage, value_),
  };
  DataMessage_IndexToValueMapMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DataMessage_IndexToValueMapMessage_descriptor_,
      DataMessage_IndexToValueMapMessage::default_instance_,
      DataMessage_IndexToValueMapMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToValueMapMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DataMessage_IndexToValueMapMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DataMessage_IndexToValueMapMessage));
  CompleteMessage_descriptor_ = file->message_type(1);
  static const int CompleteMessage_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteMessage, data_),
  };
  CompleteMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CompleteMessage_descriptor_,
      CompleteMessage::default_instance_,
      CompleteMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompleteMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CompleteMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_robotdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataMessage_descriptor_, &DataMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataMessage_IndexToTypeMapMessage_descriptor_, &DataMessage_IndexToTypeMapMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DataMessage_IndexToValueMapMessage_descriptor_, &DataMessage_IndexToValueMapMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CompleteMessage_descriptor_, &CompleteMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_robotdata_2eproto() {
  delete DataMessage::default_instance_;
  delete DataMessage_reflection_;
  delete DataMessage_IndexToTypeMapMessage::default_instance_;
  delete DataMessage_IndexToTypeMapMessage_reflection_;
  delete DataMessage_IndexToValueMapMessage::default_instance_;
  delete DataMessage_IndexToValueMapMessage_reflection_;
  delete CompleteMessage::default_instance_;
  delete CompleteMessage_reflection_;
}

void protobuf_AddDesc_robotdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017robotdata.proto\022\004data\"\364\001\n\013DataMessage\022"
    "\021\n\tClassName\030\001 \002(\t\022\?\n\016IndexToTypeMap\030\002 \002"
    "(\0132\'.data.DataMessage.IndexToTypeMapMess"
    "age\022A\n\017IndexToValueMap\030\003 \002(\0132(.data.Data"
    "Message.IndexToValueMapMessage\032%\n\025IndexT"
    "oTypeMapMessage\022\014\n\004type\030\001 \003(\t\032\'\n\026IndexTo"
    "ValueMapMessage\022\r\n\005value\030\001 \003(\t\"2\n\017Comple"
    "teMessage\022\037\n\004Data\030\001 \003(\0132\021.data.DataMessa"
    "ge", 322);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "robotdata.proto", &protobuf_RegisterTypes);
  DataMessage::default_instance_ = new DataMessage();
  DataMessage_IndexToTypeMapMessage::default_instance_ = new DataMessage_IndexToTypeMapMessage();
  DataMessage_IndexToValueMapMessage::default_instance_ = new DataMessage_IndexToValueMapMessage();
  CompleteMessage::default_instance_ = new CompleteMessage();
  DataMessage::default_instance_->InitAsDefaultInstance();
  DataMessage_IndexToTypeMapMessage::default_instance_->InitAsDefaultInstance();
  DataMessage_IndexToValueMapMessage::default_instance_->InitAsDefaultInstance();
  CompleteMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_robotdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_robotdata_2eproto {
  StaticDescriptorInitializer_robotdata_2eproto() {
    protobuf_AddDesc_robotdata_2eproto();
  }
} static_descriptor_initializer_robotdata_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int DataMessage_IndexToTypeMapMessage::kTypeFieldNumber;
#endif  // !_MSC_VER

DataMessage_IndexToTypeMapMessage::DataMessage_IndexToTypeMapMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataMessage_IndexToTypeMapMessage::InitAsDefaultInstance() {
}

DataMessage_IndexToTypeMapMessage::DataMessage_IndexToTypeMapMessage(const DataMessage_IndexToTypeMapMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataMessage_IndexToTypeMapMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataMessage_IndexToTypeMapMessage::~DataMessage_IndexToTypeMapMessage() {
  SharedDtor();
}

void DataMessage_IndexToTypeMapMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataMessage_IndexToTypeMapMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMessage_IndexToTypeMapMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataMessage_IndexToTypeMapMessage_descriptor_;
}

const DataMessage_IndexToTypeMapMessage& DataMessage_IndexToTypeMapMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robotdata_2eproto();  return *default_instance_;
}

DataMessage_IndexToTypeMapMessage* DataMessage_IndexToTypeMapMessage::default_instance_ = NULL;

DataMessage_IndexToTypeMapMessage* DataMessage_IndexToTypeMapMessage::New() const {
  return new DataMessage_IndexToTypeMapMessage;
}

void DataMessage_IndexToTypeMapMessage::Clear() {
  type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataMessage_IndexToTypeMapMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type(0).data(), this->type(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataMessage_IndexToTypeMapMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string type = 1;
  for (int i = 0; i < this->type_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->type(i).data(), this->type(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->type(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataMessage_IndexToTypeMapMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string type = 1;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type(i).data(), this->type(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->type(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataMessage_IndexToTypeMapMessage::ByteSize() const {
  int total_size = 0;
  
  // repeated string type = 1;
  total_size += 1 * this->type_size();
  for (int i = 0; i < this->type_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->type(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMessage_IndexToTypeMapMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataMessage_IndexToTypeMapMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataMessage_IndexToTypeMapMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataMessage_IndexToTypeMapMessage::MergeFrom(const DataMessage_IndexToTypeMapMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  type_.MergeFrom(from.type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataMessage_IndexToTypeMapMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_IndexToTypeMapMessage::CopyFrom(const DataMessage_IndexToTypeMapMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_IndexToTypeMapMessage::IsInitialized() const {
  
  return true;
}

void DataMessage_IndexToTypeMapMessage::Swap(DataMessage_IndexToTypeMapMessage* other) {
  if (other != this) {
    type_.Swap(&other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataMessage_IndexToTypeMapMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataMessage_IndexToTypeMapMessage_descriptor_;
  metadata.reflection = DataMessage_IndexToTypeMapMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DataMessage_IndexToValueMapMessage::kValueFieldNumber;
#endif  // !_MSC_VER

DataMessage_IndexToValueMapMessage::DataMessage_IndexToValueMapMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataMessage_IndexToValueMapMessage::InitAsDefaultInstance() {
}

DataMessage_IndexToValueMapMessage::DataMessage_IndexToValueMapMessage(const DataMessage_IndexToValueMapMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataMessage_IndexToValueMapMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataMessage_IndexToValueMapMessage::~DataMessage_IndexToValueMapMessage() {
  SharedDtor();
}

void DataMessage_IndexToValueMapMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DataMessage_IndexToValueMapMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMessage_IndexToValueMapMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataMessage_IndexToValueMapMessage_descriptor_;
}

const DataMessage_IndexToValueMapMessage& DataMessage_IndexToValueMapMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robotdata_2eproto();  return *default_instance_;
}

DataMessage_IndexToValueMapMessage* DataMessage_IndexToValueMapMessage::default_instance_ = NULL;

DataMessage_IndexToValueMapMessage* DataMessage_IndexToValueMapMessage::New() const {
  return new DataMessage_IndexToValueMapMessage;
}

void DataMessage_IndexToValueMapMessage::Clear() {
  value_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataMessage_IndexToValueMapMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string value = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value(0).data(), this->value(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_value;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataMessage_IndexToValueMapMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string value = 1;
  for (int i = 0; i < this->value_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->value(i).data(), this->value(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->value(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataMessage_IndexToValueMapMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string value = 1;
  for (int i = 0; i < this->value_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value(i).data(), this->value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->value(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataMessage_IndexToValueMapMessage::ByteSize() const {
  int total_size = 0;
  
  // repeated string value = 1;
  total_size += 1 * this->value_size();
  for (int i = 0; i < this->value_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->value(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMessage_IndexToValueMapMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataMessage_IndexToValueMapMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataMessage_IndexToValueMapMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataMessage_IndexToValueMapMessage::MergeFrom(const DataMessage_IndexToValueMapMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  value_.MergeFrom(from.value_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataMessage_IndexToValueMapMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage_IndexToValueMapMessage::CopyFrom(const DataMessage_IndexToValueMapMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage_IndexToValueMapMessage::IsInitialized() const {
  
  return true;
}

void DataMessage_IndexToValueMapMessage::Swap(DataMessage_IndexToValueMapMessage* other) {
  if (other != this) {
    value_.Swap(&other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataMessage_IndexToValueMapMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataMessage_IndexToValueMapMessage_descriptor_;
  metadata.reflection = DataMessage_IndexToValueMapMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int DataMessage::kClassNameFieldNumber;
const int DataMessage::kIndexToTypeMapFieldNumber;
const int DataMessage::kIndexToValueMapFieldNumber;
#endif  // !_MSC_VER

DataMessage::DataMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DataMessage::InitAsDefaultInstance() {
  indextotypemap_ = const_cast< ::data::DataMessage_IndexToTypeMapMessage*>(&::data::DataMessage_IndexToTypeMapMessage::default_instance());
  indextovaluemap_ = const_cast< ::data::DataMessage_IndexToValueMapMessage*>(&::data::DataMessage_IndexToValueMapMessage::default_instance());
}

DataMessage::DataMessage(const DataMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DataMessage::SharedCtor() {
  _cached_size_ = 0;
  classname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  indextotypemap_ = NULL;
  indextovaluemap_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DataMessage::~DataMessage() {
  SharedDtor();
}

void DataMessage::SharedDtor() {
  if (classname_ != &::google::protobuf::internal::kEmptyString) {
    delete classname_;
  }
  if (this != default_instance_) {
    delete indextotypemap_;
    delete indextovaluemap_;
  }
}

void DataMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DataMessage_descriptor_;
}

const DataMessage& DataMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robotdata_2eproto();  return *default_instance_;
}

DataMessage* DataMessage::default_instance_ = NULL;

DataMessage* DataMessage::New() const {
  return new DataMessage;
}

void DataMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_classname()) {
      if (classname_ != &::google::protobuf::internal::kEmptyString) {
        classname_->clear();
      }
    }
    if (has_indextotypemap()) {
      if (indextotypemap_ != NULL) indextotypemap_->::data::DataMessage_IndexToTypeMapMessage::Clear();
    }
    if (has_indextovaluemap()) {
      if (indextovaluemap_ != NULL) indextovaluemap_->::data::DataMessage_IndexToValueMapMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DataMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ClassName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->classname().data(), this->classname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_IndexToTypeMap;
        break;
      }
      
      // required .data.DataMessage.IndexToTypeMapMessage IndexToTypeMap = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IndexToTypeMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_indextotypemap()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_IndexToValueMap;
        break;
      }
      
      // required .data.DataMessage.IndexToValueMapMessage IndexToValueMap = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_IndexToValueMap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_indextovaluemap()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DataMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string ClassName = 1;
  if (has_classname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->classname().data(), this->classname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->classname(), output);
  }
  
  // required .data.DataMessage.IndexToTypeMapMessage IndexToTypeMap = 2;
  if (has_indextotypemap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->indextotypemap(), output);
  }
  
  // required .data.DataMessage.IndexToValueMapMessage IndexToValueMap = 3;
  if (has_indextovaluemap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->indextovaluemap(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DataMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string ClassName = 1;
  if (has_classname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->classname().data(), this->classname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->classname(), target);
  }
  
  // required .data.DataMessage.IndexToTypeMapMessage IndexToTypeMap = 2;
  if (has_indextotypemap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->indextotypemap(), target);
  }
  
  // required .data.DataMessage.IndexToValueMapMessage IndexToValueMap = 3;
  if (has_indextovaluemap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->indextovaluemap(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DataMessage::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string ClassName = 1;
    if (has_classname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->classname());
    }
    
    // required .data.DataMessage.IndexToTypeMapMessage IndexToTypeMap = 2;
    if (has_indextotypemap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->indextotypemap());
    }
    
    // required .data.DataMessage.IndexToValueMapMessage IndexToValueMap = 3;
    if (has_indextovaluemap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->indextovaluemap());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DataMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DataMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DataMessage::MergeFrom(const DataMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_classname()) {
      set_classname(from.classname());
    }
    if (from.has_indextotypemap()) {
      mutable_indextotypemap()->::data::DataMessage_IndexToTypeMapMessage::MergeFrom(from.indextotypemap());
    }
    if (from.has_indextovaluemap()) {
      mutable_indextovaluemap()->::data::DataMessage_IndexToValueMapMessage::MergeFrom(from.indextovaluemap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DataMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMessage::CopyFrom(const DataMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void DataMessage::Swap(DataMessage* other) {
  if (other != this) {
    std::swap(classname_, other->classname_);
    std::swap(indextotypemap_, other->indextotypemap_);
    std::swap(indextovaluemap_, other->indextovaluemap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DataMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DataMessage_descriptor_;
  metadata.reflection = DataMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CompleteMessage::kDataFieldNumber;
#endif  // !_MSC_VER

CompleteMessage::CompleteMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CompleteMessage::InitAsDefaultInstance() {
}

CompleteMessage::CompleteMessage(const CompleteMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CompleteMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompleteMessage::~CompleteMessage() {
  SharedDtor();
}

void CompleteMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CompleteMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompleteMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompleteMessage_descriptor_;
}

const CompleteMessage& CompleteMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_robotdata_2eproto();  return *default_instance_;
}

CompleteMessage* CompleteMessage::default_instance_ = NULL;

CompleteMessage* CompleteMessage::New() const {
  return new CompleteMessage;
}

void CompleteMessage::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CompleteMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .data.DataMessage Data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_Data;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CompleteMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .data.DataMessage Data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CompleteMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .data.DataMessage Data = 1;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CompleteMessage::ByteSize() const {
  int total_size = 0;
  
  // repeated .data.DataMessage Data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompleteMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CompleteMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CompleteMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CompleteMessage::MergeFrom(const CompleteMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CompleteMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompleteMessage::CopyFrom(const CompleteMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompleteMessage::IsInitialized() const {
  
  for (int i = 0; i < data_size(); i++) {
    if (!this->data(i).IsInitialized()) return false;
  }
  return true;
}

void CompleteMessage::Swap(CompleteMessage* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CompleteMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompleteMessage_descriptor_;
  metadata.reflection = CompleteMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data

// @@protoc_insertion_point(global_scope)
